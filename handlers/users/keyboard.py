from aiogram import Dispatcher
from aiogram.dispatcher.filters import CommandStart, Text
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

from db_api.commands.users import select_user_id, add_user


async def start(message: Message):
    if not await select_user_id(message.from_user.id):
        await add_user(message.from_user.id)
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("SKS")
                                       ],
                                       [
                                           KeyboardButton("–ß—Ç–æ —ç—Ç–æ?")
                                       ]
                                   ]
                                   )
    return await message.answer("–ù—É –Ω–∏—á–µ–≥–æ —Å–µ–±–µ, —á—Ç–æ –∂–µ —Ç—ã –∑–¥–µ—Å—å –∑–∞–±—ã–ª?", reply_markup=keyboard)


async def what_this(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–ù–∞–∑–∞–¥")
                                       ]
                                   ]
                                   )
    return await message.answer("–∂–∏–∑–Ω—å —ç—Ç–æ —Ç–∏–ø–∞ –∫–∞–∫ –∫–æ–ª–æ–¥–µ—Ü... —Ç–∞–º –≤–µ–¥—Ä–æ —á–µ—Ç–æ... –∏ –≤–æ–¥–∞... \n"
                                "SKS Info (https://t.me/+7ZeeST2yEuo4ZTJi)", reply_markup=keyboard)


async def back_1(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("SKS")
                                       ],
                                       [
                                           KeyboardButton("–ß—Ç–æ —ç—Ç–æ?")
                                       ]
                                   ]
                                   )
    return await  message.answer("–ù—É –Ω–∏—á–µ–≥–æ —Å–µ–±–µ, —á—Ç–æ –∂–µ —Ç—ã –∑–¥–µ—Å—å –∑–∞–±—ã–ª?", reply_markup=keyboard)


async def sks(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–î–∞ üòé"),
                                           KeyboardButton("–ù–µ—Ç... ü§î")
                                       ]
                                   ]
                                   )
    return await message.answer("–°–ª—É—à–∞–π, –∞ —Ç—ã —Ç–æ–∂–µ –±–µ–∑–¥–µ–ª—å–Ω–∏–∫?", reply_markup=keyboard)


async def no(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–ùa–∑–∞–¥")
                                       ]
                                   ]
                                   )
    return await message.answer("–¢–æ–≥–¥–∞ —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å –¥–µ–ª–∞–µ—à—å?", reply_markup=keyboard)


async def back_2(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–î–∞ üòé"),
                                           KeyboardButton("–ù–µ—Ç... ü§î")
                                       ]
                                   ]
                                   )
    return await message.answer("–°–ª—É—à–∞–π, –∞ —Ç—ã —Ç–æ–∂–µ –±–µ–∑–¥–µ–ª—å–Ω–∏–∫?", reply_markup=keyboard)


async def yes(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–í—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª –æ–± —ç—Ç–æ–º ü§ì")
                                       ],
                                       [
                                           KeyboardButton("–Ø –ø–µ—Ä–µ–¥—É–º–∞–ª... ü§î")
                                       ]
                                   ]
                                   )
    return await message.answer("–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–æ–¥—ã—Ä—è–º–∏? –°–ª—É—à–∞–π, –∞ –æ–Ω–æ —Ç–µ–±–µ –Ω–∞–¥–æ? –ú—ã —Ç–∞–∫-—Ç–æ —Ç—É—Ç –Ω–∏—â–∏–µ —Å–∏–¥–∏–º...", reply_markup=keyboard)


async def user_think(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–û–∫")
                                       ]
                                   ]
                                   )
    return await message.answer("–í–æ—Ç —ç—Ç–æ –ø–æ-–Ω–∞—à–µ–º—É", reply_markup=keyboard)


async def ok(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("SKS")
                                       ],
                                       [
                                           KeyboardButton("–ß—Ç–æ —ç—Ç–æ?")
                                       ]
                                   ]
                                   )
    return await message.answer("–ù—É –Ω–∏—á–µ–≥–æ —Å–µ–±–µ, —á—Ç–æ –∂–µ —Ç—ã –∑–¥–µ—Å—å –∑–∞–±—ã–ª?", reply_markup=keyboard)


async def dreamed(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É üçâ")
                                       ],
                                       [
                                           KeyboardButton("–í—Å—ë-—Ç–∞–∫–∏ —è –Ω–µ —Ö–æ—á—É üòé")
                                       ]
                                   ]
                                   )
    return await message.answer("–õ–∞–¥–Ω–æ, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –≤–¥—Ä—É–≥ —á—Ç–æ –∏ –ø–æ–ª—É—á–∏—Ç—Å—è...", reply_markup=keyboard)


async def i_do_not_want(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–ò–ª–∏ –¥–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π ü§î")
                                       ],
                                       [
                                           KeyboardButton("–í –Ω–∞—á–∞–ª–æ")
                                       ]
                                   ]
                                   )
    return await message.answer("–í–æ—Ç –∏ —Å–ª–∞–≤–Ω–æ, –Ω–µ —Ç—Ä–∞—Ç—å –Ω–∞ –Ω–∞—Å —Å–≤–æ—ë –≤—Ä–µ–º—è", reply_markup=keyboard)


async def begin(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("SKS")
                                       ],
                                       [
                                           KeyboardButton("–ß—Ç–æ —ç—Ç–æ?")
                                       ]
                                   ]
                                   )
    return await message.answer("–ù—É –Ω–∏—á–µ–≥–æ —Å–µ–±–µ, —á—Ç–æ –∂–µ —Ç—ã –∑–¥–µ—Å—å –∑–∞–±—ã–ª?", reply_markup=keyboard)


async def or_begin(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–í—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª –æ–± —ç—Ç–æ–º ü§ì")
                                       ],
                                       [
                                           KeyboardButton("–Ø –ø–µ—Ä–µ–¥—É–º–∞–ª... ü§î")
                                       ]
                                   ]
                                   )
    return await message.answer("–¢—ã –ø—Ä–∞–≤–¥–∞ —Ö–æ—á–µ—à—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–æ–¥—ã—Ä—è–º–∏? –°–ª—É—à–∞–π, –∞ –æ–Ω–æ —Ç–µ–±–µ –Ω–∞–¥–æ? –ú—ã —Ç–∞–∫-—Ç–æ —Ç—É—Ç –Ω–∏—â–∏–µ —Å–∏–¥–∏–º...", reply_markup=keyboard)


async def application(message: Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True,
                                   keyboard=[
                                       [
                                           KeyboardButton("–ü—Ä–∏–≤–ª–µ—á—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ üçé")
                                       ],
                                       [
                                           KeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é üçè")
                                       ],
                                       [
                                           KeyboardButton("–ü–æ–ø–∞—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É üåê")
                                       ],
                                       [
                                           KeyboardButton("–Ø —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–¥—É–º–∞–ª...")
                                       ]
                                   ]
                                   )
    return await message.answer("–°—Ç–æ—è–º–±–∞, –∞ –∫—É–¥–∞ –∑–∞—è–≤–∫—É-—Ç–æ –ø–æ–¥–∞–≤–∞—Ç—å –±—É–¥–µ–º?", reply_markup=keyboard)


def register_keyboard_user(dp: Dispatcher):
    dp.register_message_handler(
        start,
        CommandStart()
    )
    dp.register_message_handler(
        what_this,
        Text("–ß—Ç–æ —ç—Ç–æ?")
    )
    dp.register_message_handler(
        back_1,
        Text("–ù–∞–∑–∞–¥")
    )
    dp.register_message_handler(
        sks,
        Text("SKS")
    )
    dp.register_message_handler(
        no,
        Text("–ù–µ—Ç... ü§î")
    )
    dp.register_message_handler(
        back_2,
        Text("–ùa–∑–∞–¥")
    )
    dp.register_message_handler(
        yes,
        Text("–î–∞ üòé")
    )
    dp.register_message_handler(
        user_think,
        Text("–Ø –ø–µ—Ä–µ–¥—É–º–∞–ª... ü§î")
    )
    dp.register_message_handler(
        ok,
        Text("–û–∫")
    )
    dp.register_message_handler(
        dreamed,
        Text("–í—Å–µ–≥–¥–∞ –º–µ—á—Ç–∞–ª –æ–± —ç—Ç–æ–º ü§ì")
    )
    dp.register_message_handler(
        i_do_not_want,
        Text("–í—Å—ë-—Ç–∞–∫–∏ —è –Ω–µ —Ö–æ—á—É üòé")
    )
    dp.register_message_handler(
        begin,
        Text("–í –Ω–∞—á–∞–ª–æ")
    )
    dp.register_message_handler(
        or_begin,
        Text("–ò–ª–∏ –¥–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π ü§î")
    )
    dp.register_message_handler(
        application,
        Text("–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É üçâ")
    )
